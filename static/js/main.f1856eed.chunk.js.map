{"version":3,"sources":["components/Navbar/Navbar.jsx","components/Cards/Cards.jsx","Api/index.js","components/Charts/Charts.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Cards/Cards.module.css","components/Navbar/Navbar.module.css","components/Charts/Charts.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["HideOnScroll","props","children","trigger","useScrollTrigger","target","undefined","Slide","appear","direction","in","HideAppBar","Fragment","CssBaseline","AppBar","Toolbar","Typography","variant","Container","Box","className","styles","sp","Cards","data","confirmed","recovered","deaths","lastUpdate","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","containers","CardContent","color","gutterBottom","start","end","value","duration","separator","Date","toDateString","overlay","text","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","console","log","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Charts","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetchApi","FormControl","formControl","NativeSelect","defaultValue","onChange","e","i","key","App","state","fetchedData","setState","this","body","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f1856eed.chunk.js","sourcesContent":["import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport styles from \"./Navbar.module.css\";\r\nfunction HideOnScroll(props) {\r\n  const { children } = props;\r\n  const trigger = useScrollTrigger({ target: undefined });\r\n\r\n  return (\r\n    <Slide appear={false} direction=\"down\" in={!trigger}>\r\n      {children}\r\n    </Slide>\r\n  );\r\n}\r\n\r\nexport default function HideAppBar(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <HideOnScroll {...props}>\r\n        <AppBar>\r\n          <Toolbar>\r\n            <Typography variant=\"h6\">Coronavirus Tracker App</Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </HideOnScroll>\r\n      <Toolbar />\r\n      <Container>\r\n        <Box>\r\n          {/* <Typography> */}{\" \"}\r\n          <div className={styles.sp}>\r\n            <b>\r\n              Protect yourself and others around you by knowing the facts and\r\n              taking appropriate precautions. Follow advice provided by your\r\n              local public health agency. To prevent the spread of COVID-19:\r\n            </b>\r\n          </div>\r\n          <ul>\r\n            <li>\r\n              Clean your hands often. Use soap and water, or an alcohol-based\r\n              hand rub.\r\n            </li>\r\n            <li>\r\n              {\" \"}\r\n              Maintain a safe distance from anyone who is coughing or sneezing.\r\n              Donâ€™t touch your eyes, nose or mouth.\r\n            </li>\r\n            <li>\r\n              {\" \"}\r\n              Cover your nose and mouth with your bent elbow or a tissue when\r\n              you cough or sneeze.\r\n            </li>\r\n            <li> Stay home if you feel unwell.</li>\r\n            <li>\r\n              If you have a fever, a cough and difficulty breathing, seek\r\n              medical attention. Call in advance.\r\n            </li>\r\n          </ul>\r\n          Follow the directions of your local health authority. Avoiding\r\n          unneeded visits to medical facilities allows healthcare systems to\r\n          operate more effectively, therefore protecting you and others.\r\n          {/* </Typography> */}\r\n        </Box>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Grid,\r\n  //StylesProvider\r\n} from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\nimport styles from \"./Cards.module.css\";\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return \"Loading....\";\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.infected, styles.containers)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              {\" \"}\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={3}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of active cases of COVID-19{\" \"}\r\n            </Typography>\r\n            <CardContent className={styles.overlay}>\r\n              <Typography variant=\"body2\" className={styles.text}>\r\n                StayHome\r\n              </Typography>\r\n            </CardContent>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.recovered, styles.containers)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              {\" \"}\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                duration={3}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of recoveries cases of COVID-19{\" \"}\r\n            </Typography>\r\n            <CardContent className={styles.overlay}>\r\n              <Typography variant=\"body2\" className={styles.text}>\r\n                Immunity wins\r\n              </Typography>\r\n            </CardContent>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.deaths, styles.containers)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={deaths.value}\r\n                duration={3}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of deaths caused by COVID-19{\" \"}\r\n            </Typography>\r\n            <CardContent className={styles.overlay}>\r\n              <Typography variant=\"body2\" className={styles.text}>\r\n                StaySafe\r\n              </Typography>\r\n            </CardContent>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from \"axios\";\r\nconst url = \"https://covid19.mathdro.id/api\";\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n  try {\r\n    const { data } = await axios.get(changeableUrl);\r\n    const modifiedData = {\r\n      confirmed: data.confirmed,\r\n      recovered: data.recovered,\r\n      deaths: data.deaths,\r\n      lastUpdate: data.lastUpdate,\r\n    };\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${url}/countries`);\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../Api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport styles from \"./Charts.module.css\";\r\nconst Charts = ({ data: { confirmed, deaths, recovered }, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const lineChart = dailyData.map.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"purple\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(225,0,0,0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n  //  console.log(confirmed, recovered, deaths);\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"recovered\", \"deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"people\",\r\n            backgroundColor: [\r\n              \"rgba(0, 0, 255, 0.5)\",\r\n              \"rgba(0, 255, 0, 0.5)\",\r\n              \"rgba(255, 0, 0, 0.5)\",\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current state  in ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n  return (\r\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\r\n  );\r\n};\r\nexport default Charts;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport styles from \"./CountryPicker.module.css\";\r\nimport { fetchCountries } from \"../../Api\";\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchApi = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n    };\r\n    fetchApi();\r\n  }, [setFetchedCountries]);\r\n  //  console.log(fetchedCountries);\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect\r\n        defaultValue=\"\"\r\n        onChange={(e) => handleCountryChange(e.target.value)}\r\n      >\r\n        <option value=\"\">Global</option>\r\n        {fetchedCountries.map((country, i) => (\r\n          <option key={i} value={country}>\r\n            {country}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React from \"react\";\r\n// import Cards from './components/Cards/Cards'\r\n// import Charts from './components/Charts/Charts'\r\n// import CountryPicker from './components/CountryPicker/CountryPicker'\r\nimport { Navbar, Cards, Charts, CountryPicker } from \"./components\";\r\nimport styles from \"./App.module.css\";\r\nimport { fetchData } from \"./Api\";\r\nimport coronaImage from \"./images/image.png\";\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n    this.setState({ data: fetchedData });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n    this.setState({ data: fetchedData, country: country });\r\n  };\r\n  render() {\r\n    const { data, country } = this.state;\r\n    return (\r\n      <div className={styles.body}>\r\n        <Navbar />\r\n        <div className={styles.container}>\r\n          <img className={styles.image} src={coronaImage} alt=\"covid imge\" />\r\n          <Cards data={data} />\r\n          <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        </div>\r\n        <Charts data={data} country={country} />\r\n        <br></br>\r\n        <br></br>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"App_body__1cE_v\",\"container\":\"App_container__3r88O\",\"image\":\"App_image__LmnwY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3Hg_4\",\"containers\":\"Cards_containers__1zgDT\",\"overlay\":\"Cards_overlay__2A95K\",\"text\":\"Cards_text__3GcYT\",\"card\":\"Cards_card__2DRkb\",\"infected\":\"Cards_infected__2ElfL\",\"recovered\":\"Cards_recovered__3mcSE\",\"deaths\":\"Cards_deaths__1pjxr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sp\":\"Navbar_sp__3NPYm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__39wR0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3ZxuX\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}